<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
        >


    <!--　************************************************************************
    コントローラーテスト用のbean定義ファイル

      使い方
    ・Service層のコンポーネントスキャンの設定に、モック化するサービス用の例外設定をする（118行目〜）
    ・モック化するサービスのBean定義をする（143行目くらい〜）
    ************************************************************************ -->


    <!-- コンテキスト -->
    <bean id="propertyConfigurer"
          class="jp.co.biglobe.lib.essential.property.PropertyAccessor">
        <property name="locations">
            <list>
                <value>classpath:properties/environment/${environment}.properties</value>
            </list>
        </property>
    </bean>
    <!-- <context:converter-placeholder location="${locations}" /> -->
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"/>

    <!-- DATA SOURCE（TODO:JNDIに変える） ←テストコードからはJNDIは使えないのでこのままでいいと思う（やすにし）-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="defaultAutoCommit" value="true"></property>
        <property name="removeAbandoned" value="true"></property>
    </bean>


    <!-- DBUnitをAutowiredで呼び出す -->
    <context:component-scan base-package="jp.co.biglobe.test.util.dbunit"/>

    <context:component-scan base-package="jp.co.biglobe.isp.auth.api"/>
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.voiceoption.testdata"/>

    <!-- メッセージファイルの読込 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 複数ファイルで同じkeyが定義されている場合は、最初に読み込んだファイルのkeyが有効になる -->
                <value>classpath:/META-INF/properties/message</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="9447424"/>
    </bean>

    <!-- AOPを有効化 -->
    <aop:aspectj-autoproxy/>

    <!-- MyBatis設定の読込 -->
    <import resource="classpath:META-INF/core/database.xml"/>

    <!-- SpringMVCの有効化 -->
    <mvc:annotation-driven validator="validator"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- Controller実行時に呼び出され、メソッド処理前と処理後の共通処理を担う -->
    <mvc:interceptors>
        <bean class="jp.co.biglobe.lib.essential.controller.ApiInterceptor"/>
    </mvc:interceptors>

    <!-- グローバルなExceptionHandlerの定義
    　　　このパッケージのコンポーネントスキャンは原則必須とし、振る舞いを変更したい場合は
    　　　ExceptionHandlerの内部でAutowiredされるクラス（jp.co.biglobe.lib.component.exceptionhandler内のクラス）を
    　　　差し替えることにより実現すること
     -->
    <context:component-scan base-package="jp.co.biglobe.lib.essential.exceptionhandler"/>

    <!-- Framework層設定の読込 -->
    <import resource="classpath:META-INF/core/core-component-scan.xml"/>

    <!-- ここからAutowiredを行うためのClassの読み込み。パッケージを追加した場合、ここに追加が必要な場合がある。
    読み込むパッケージが増えてきたら、ファイルを分ける。-->


    <!-- Controller層 -->
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.voiceoption.api"/>
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.biglobedenwa.api"/>

    <!-- DataSource層 -->
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.voiceoption.datasource">
        <context:exclude-filter type="regex"
                                expression="jp.co.biglobe.isp.mobile.voiceoption.datasource.identificationfiles.local.*"/>
        <context:exclude-filter type="regex"
                                expression="jp.co.biglobe.isp.mobile.voiceoption.datasource.identificationfiles.sftp.*"/>
    </context:component-scan>
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.biglobedenwa.datasource"/>

    <context:component-scan base-package="jp.co.biglobe.isp.mobile.ltethreeg.datasource"/>
    <context:component-scan base-package="jp.co.biglobe.isp.auth.datasource"/>
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.biglobemember.datasource" />


    <!-- Service層 -->
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.voiceoption.service">
        <!--　ここにMock化対象のサービスクラスのスキャン除外設定を記述　-->
        <context:exclude-filter type="regex"
                                expression="jp.co.biglobe.isp.mobile.voiceoption.service.mnpout.MnpOutConfirmReferService"/>
    </context:component-scan>
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.biglobedenwa.service"/>

    <context:component-scan base-package="jp.co.biglobe.isp.auth.service"/>

    <!-- 監視 -->
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.monitoring.api"/>

    <!-- extension -->
    <context:component-scan base-package="jp.co.biglobe.isp.mobile.extension"/>

    <beans profile="local,development,testing">
        <context:component-scan base-package="jp.co.biglobe.isp.mobile.voiceoption.testdata"/>
    </beans>
    <beans profile="development,staging,testing,production">
        <bean id="identificationFilesRepository"
              class="jp.co.biglobe.isp.mobile.voiceoption.datasource.identificationfiles.sftp.IdentificationFilesRepositorySftp"/>
    </beans>
    <beans profile="local">
        <bean id="identificationFilesRepository"
              class="jp.co.biglobe.isp.mobile.voiceoption.datasource.identificationfiles.local.IdentificationFilesRepositoryLocal"/>
    </beans>

    <!--　ここにMock化対象のサービスクラスのbean定義を記述　-->
    <beans>
        <bean id="mnpOutConfirmReferServiceMock" class="org.mockito.Mockito" factory-method="mock">
            <constructor-arg
                    value="jp.co.biglobe.isp.mobile.voiceoption.service.mnpout.MnpOutConfirmReferService"/>
        </bean>
    </beans>


</beans>
