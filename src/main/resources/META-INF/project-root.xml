<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
        >

    <!--
        プロジェクト固有の設定を記述（META-INF/root.xmlから読み込まれる）
        ==========================================================
    -->

    <!-- BobioTemplateの定義 -->
    <!--
    <bean class="jp.co.biglobe.frameworkrk.scenario.bobio.BobioTemplateImpl" />
    -->

    <!-- Beanコンテナの終了時にシナリオ実行コマンドのスレッドプールをシャットダウンする -->
    <!--bean id="threadPoolSingleton" class="jp.co.biglobe.framework.scenariocommand.threadpool.ThreadPoolSingleton" factory-method="valueOf" destroy-method="shutdown">
        <constructor-arg>
            <value>INSTANCE</value>
        </constructor-arg>
    </bean-->

    <!-- メッセージファイルの読込 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 複数ファイルで同じkeyが定義されている場合は、最初に読み込んだファイルのkeyが有効になる -->
                <value>classpath:/META-INF/properties/message</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="9447424"/>
    </bean>

    <!-- AOPを有効化 -->
    <aop:aspectj-autoproxy/>

    <!-- MyBatis設定の読込 -->
    <import resource="classpath:META-INF/core/database.xml"/>

    <!-- SpringMVCの有効化 -->
    <mvc:annotation-driven validator="validator">
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- Controller実行時に呼び出され、メソッド処理前と処理後の共通処理を担う -->
    <mvc:interceptors>
        <bean class="jp.co.biglobe.lib.essential.controller.ApiInterceptor"/>
    </mvc:interceptors>

    <!-- グローバルなExceptionHandlerの定義
    　　　このパッケージのコンポーネントスキャンは原則必須とし、振る舞いを変更したい場合は
    　　　ExceptionHandlerの内部でAutowiredされるクラス（jp.co.biglobe.lib.component.exceptionhandler内のクラス）を
    　　　差し替えることにより実現すること
     -->
    <context:component-scan base-package="jp.co.biglobe.lib.essential.exceptionhandler"/>

    <!-- 全プロジェクト共通のcomponent-scanの設定（Autowiredに必要） -->
    <import resource="classpath:META-INF/core/core-component-scan.xml"/>

    <!-- プロジェクト固有のcomponent-scanの設定（Autowiredに必要） -->
    <import resource="classpath:META-INF/project-component-scan.xml"/>


</beans>
