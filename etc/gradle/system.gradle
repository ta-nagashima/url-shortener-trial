// プラグイン定義 利用できるタスク(gradle tasks)が増える
apply {
    plugin 'war'
    plugin "idea"
}



// 各環境にバージョンを揃えたうえでgradleをインストールするのは大変なので、
// gradlewコマンドを利用する。
task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
    jarFile = "${project.projectDir}/etc/gradle/wrapper/gradle-wrapper.jar"
}

// プロパティ設定
ext {
    defaultEncoding = 'UTF-8'
}

// 環境ごとにデフォルト文字コードが違うので、コンパイル時の文字コードを指定する
compileJava.options.encoding = defaultEncoding
compileGroovy.options.encoding = defaultEncoding
compileTestJava.options.encoding = defaultEncoding

// デフォルトのディレクトリ構成から以下の要素を追加する
sourceSets {
    main {
        java.srcDirs = []
        groovy.srcDirs = ['src/main/java']
        resources {
            srcDir 'src/main/java'
        }
        // TomcatがContextを自動リロードするために、クラスファイルの出力先を変更
        output.classesDir = 'src/main/webapp/WEB-INF/classes'
    }

    test {
        java.srcDirs = []
        groovy.srcDirs = ['src/test/groovy', 'src/test/java']
    }
}

// gradlew test コマンド実行時の処理
test {
    // テストする環境で使用する設定ファイルが異なる
    systemProperties 'environment': "${env}"

    // テスト失敗時の情報を標準より多く出力する設定
    testLogging.exceptionFormat = 'full'

    // VM引数に下記の設定をしないとcoberturaの実行が失敗する
    // test.jvmArgs '-XX:-UseSplitVerifier'

    // GradleでEnclosedテストが2回実行されることの対策（そのうちGradle側で対応してくれるようになるかも）
    exclude '**/*$*'

}

// gradlew clean コマンド実行時の処理
clean {
    // "gradle clean"を実行した際に、Tomcat用の出力先も削除対象とする
    delete << 'src/main/webapp/WEB-INF/classes'
}


// gradlew war コマンド実行時の処理
war {
    baseName = "${warFileName}"
    version = "${warVersion}"
}